generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PageSlices {
  blockid String  @id
  pageid  String
  order   Int
  content String?
  Pages   Pages   @relation(fields: [pageid], references: [pageid])

  @@unique([pageid, order])
}

model Pages {
  title      String?
  pageid     String       @id
  userOwner  String
  PageSlices PageSlices[]
  User       User         @relation(fields: [userOwner], references: [username])
}

model User {
  username String  @unique
  email    String  @id
  Pages    Pages[]
}

enum RoomEntryMethods{
    FirstCome
    InviteOnly
}

// model Rooms{
//   roomID String @unique
//   entryMethods RoomEntryMethods
  
// }


// -- CreateEnum
// CREATE TYPE "RoomEntryMethods" AS ENUM ('FirstCome', 'InviteOnly');

// -- CreateTable
// CREATE TABLE "PageSlices" (
//     "blockid" TEXT NOT NULL,
//     "pageid" TEXT NOT NULL,
//     "order" INTEGER NOT NULL,
//     "content" TEXT,

//     CONSTRAINT "PageSlices_pkey" PRIMARY KEY ("blockid")
// );

// -- CreateTable
// CREATE TABLE "Pages" (
//     "title" TEXT,
//     "pageid" TEXT NOT NULL,
//     "userOwner" TEXT NOT NULL,

//     CONSTRAINT "Pages_pkey" PRIMARY KEY ("pageid")
// );

// -- CreateTable
// CREATE TABLE "User" (
//     "username" TEXT NOT NULL,
//     "email" TEXT NOT NULL,

//     CONSTRAINT "User_pkey" PRIMARY KEY ("email")
// );

// -- CreateTable
// CREATE TABLE "RoomsCreated" (
//     "roomID" TEXT NOT NULL,
//     "RoomOwner" TEXT NOT NULL,
//     "entryMethods" "RoomEntryMethods" NOT NULL,
//     "Members" TEXT[],
//     "InvitesSent" TEXT[]
// );

// -- CreateIndex
// CREATE UNIQUE INDEX "PageSlices_pageid_order_key" ON "PageSlices"("pageid", "order");

// -- CreateIndex
// CREATE UNIQUE INDEX "User_username_key" ON "User"("username");

// -- CreateIndex
// CREATE UNIQUE INDEX "RoomsCreated_roomID_key" ON "RoomsCreated"("roomID");

// -- AddForeignKey
// ALTER TABLE "PageSlices" ADD CONSTRAINT "PageSlices_pageid_fkey" FOREIGN KEY ("pageid") REFERENCES "Pages"("pageid") ON DELETE RESTRICT ON UPDATE CASCADE;

// -- AddForeignKey
// ALTER TABLE "Pages" ADD CONSTRAINT "Pages_userOwner_fkey" FOREIGN KEY ("userOwner") REFERENCES "User"("username") ON DELETE RESTRICT ON UPDATE CASCADE;

// -- AddForeignKey
// ALTER TABLE "RoomsCreated" ADD CONSTRAINT "RoomsCreated_RoomOwner_fkey" FOREIGN KEY ("RoomOwner") REFERENCES "User"("username") ON DELETE RESTRICT ON UPDATE CASCADE;

